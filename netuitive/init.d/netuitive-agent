#!/bin/sh
#
# Netuitive-agent start script
#
# chkconfig: 2345 25 75
# description: Netuitive-agent start script
# processname: python
# config: /opt/netuitive-agent/conf/supervisord.conf
# pidfile: /opt/netuitive-agent/supervisord.pid
### BEGIN INIT INFO
# Provides:          netuitive-agent
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Netuitive-agent start script.
# Description:       Netuitive-agent start script
### END INIT INFO

# Path to the supervisorctl script, server binary,
# and short-form for messages.

# Source function library
. /etc/rc.d/init.d/functions

supervisorctl=/opt/netuitive-agent/bin/supervisorctl
supervisord=/opt/netuitive-agent/bin/supervisord
prog=supervisord
pidfile=/opt/netuitive-agent/supervisord.pid
lockfile=/opt/netuitive-agent/supervisord.lck
STOP_TIMEOUT=${STOP_TIMEOUT-60}
OPTIONS="-c /opt/netuitive-agent/conf/supervisor.conf"
RETVAL=0

start() {
    echo -n $"Starting $prog: "
    daemon --pidfile=${pidfile} $supervisord $OPTIONS
    RETVAL=$?
    echo
    if [ $RETVAL -eq 0 ]; then
        touch ${lockfile}
        $supervisorctl $OPTIONS status
    fi
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p ${pidfile} -d ${STOP_TIMEOUT} $supervisord
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -rf ${lockfile} ${pidfile}
}

reload() {
    echo -n $"Reloading $prog: "
    LSB=1 killproc -p $pidfile $supervisord -HUP
    RETVAL=$?
    echo
    if [ $RETVAL -eq 7 ]; then
        failure $"$prog reload"
    else
        $supervisorctl $OPTIONS status
    fi
}

restart() {
    stop
    start
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p ${pidfile} $supervisord
        RETVAL=$?
        [ $RETVAL -eq 0 ] && $supervisorctl $OPTIONS status
        ;;
    restart)
        restart
        ;;
    condrestart|try-restart)
        if status -p ${pidfile} $supervisord >&/dev/null; then
          stop
          start
        fi
        ;;
    force-reload|reload)
        reload
        ;;
    *)
        echo $"Usage: $prog {start|stop|restart|condrestart|try-restart|force-reload|reload}"
        RETVAL=2
esac

exit $RETVAL